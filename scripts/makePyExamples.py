#!/usr/bin/env python3
import sys
import os
import json

def processExamples(topSrcDir):
	root = topSrcDir + "/examples/py/"
	sections = []
	for sec in sorted(os.listdir(root)):
		if not os.path.isdir(root + sec):
			continue
		with open(root + sec + "/meta.json") as meta:
			section = json.load(meta)
			assert "title" in section
		section['id'] = sec
		section['exs'] = []
		for ex in sorted(os.listdir(root + sec)):
			if ex in ('out', 'summary'):
				continue
			exFull = root + sec + "/" + ex
			assert os.path.isfile(exFull), (exFull, root, sec, ex)
			if not ex.endswith(".py"):
				continue
			with open(exFull, encoding='utf-8') as f:
				desc = ""
				endLine = 1
				for line in f.readlines():
					if not line.startswith("# rst"):
						endLine += 1
						continue
					line = line[5:]
					if line.startswith("-name: "):
						title = line[7:-1]
					else:
						assert line.startswith(": ")
						desc += line[2:]
			section['exs'].append({
				"id": ex, "title": title, "desc": desc, "endLine": endLine
			})
		sections.append(section)
	return {"sections": sections}


def outputRST(topSrcDir):
	data = processExamples(topSrcDir)
	root = topSrcDir + "/doc/source/"
	os.makedirs(root + "examples", exist_ok=True)
	with open(root + "examples/index.rst", "w") as f:
		f.truncate()
		f.write(".. Autogenerated in conf.py\n\n")
		f.write(".. _examples:\n\n")
		f.write("Examples\n########\n\n")
		f.write(".. toctree::\n\n")
		for sec in data["sections"]:
			f.write("\t{}\n".format(sec["id"]))

	for sec in data['sections']:
		with open(root + "examples/{}.rst".format(sec['id']),
				"w", encoding='utf-8') as f:
			f.truncate()
			f.write(".. Autogenerated in conf.py\n\n")
			for id_ in sec['oldIds']:
				f.write(".. _examples-{}:\n".format(id_))
			f.write(".. _examples-{}:\n\n".format(sec['id']))
			f.write("{}\n".format(sec["title"]))
			f.write(80*"#" + "\n\n")
			for ex in sec['exs']:
				f.write("\n\n{}\n".format(ex['title']))
				f.write(80*"^" + "\n\n")
				f.write(ex['desc'])
				f.write("""
`Explore in the playground <https://cheminf-live.imada.sdu.dk/mod?example={0}__
{1}>`__.

.. literalinclude:: /_static/examples/py/{0}/{1}
	:language: python
	:linenos:
	:lines: 1-{2}
	:tab-width: 3
""".format(sec['id'], ex['id'], ex['endLine'] - 1))


def outputJSON(topSrcDir):
	data = processExamples(topSrcDir)
	for sec in data['sections']:
		del sec['oldIds']
		for ex in sec['exs']:
			del ex['desc']
			del ex['endLine']
	print(json.dumps(data, indent=1))


if __name__ == '__main__':
	topSrcDir = sys.argv[1]
	outType = sys.argv[2]
	if outType == 'rst':
		outputRST(topSrcDir)
	elif outType == 'json':
		outputJSON(topSrcDir)
	else:
		print("Unknown output type '{}'.".format(outType))
		sys.exit(1)
