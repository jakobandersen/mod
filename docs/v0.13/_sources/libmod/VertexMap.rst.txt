.. _cpp-VertexMap:

**********************************************************
VertexMap.hpp
**********************************************************
.. default-domain:: cpp
.. default-role:: cpp:expr

.. py:currentmodule:: mod
.. cpp:namespace:: mod


Class ``template<typename Domain, typename Codomain> VertexMap``
--------------------------------------------------------------------------------------------------------------------------------

.. class:: template<typename Domain, typename Codomain> VertexMap
    

A class template used to represent general vertex maps.


Synopsis
^^^^^^^^

.. alias:: template<typename Domain, typename Codomain> VertexMap
    :maxdepth: 2
    :noroot:


Details
^^^^^^^

.. cpp:namespace-push:: template<typename Domain, typename Codomain> VertexMap

.. type:: DomainHandle = GraphHandle<Domain>
          CodomainHandle = GraphHandle<Codomain>
.. type:: DomVertex = typename Domain::Vertex
          CodomVertex = typename Codomain::Vertex
.. function:: friend std::ostream &operator<<(std::ostream &s, const VertexMap &m)
.. function:: DomainHandle getDomain() const
              CodomainHandle getCodomain() const

    :returns: the domain and codomain graphs for the vertex map.
.. function:: CodomVertex operator[](DomVertex v) const

    :returns: the image of the given domain vertex.
        May return a null vertex if the map is partial.
    :throws: :class:`LogicError` if `!v`.
    :throws: :class:`LogicError` if `v.getGraph() != getDomain()`.
.. function:: DomVertex getInverse(CodomVertex v) const

    :returns: the domain vertex that maps to the given codomain vertex.
        May return a null vertex if non exist.
    :throws: :class:`LogicError` if `!v`.
    :throws: :class:`LogicError` if `v.getGraph() != getCodomain()`.

.. cpp:namespace-pop::

